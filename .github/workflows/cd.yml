name: CI/CD
on:
  # push:
  #   branches: [main]
  # pull_request:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: false
        default: 'patch'
      publish_to_test_pypi:
        description: 'Publish to Test PyPI'
        required: true
        default: 'false'
      publish_to_pypi:
        description: 'Publish to PyPI'
        required: true
        default: 'true'

env:
  PUBLISH_TO_TEST_PYPI: ${{ github.event.inputs.publish_to_test_pypi }}
  PUBLISH_TO_PYPI: ${{ github.event.inputs.publish_to_pypi }}

jobs:
  ci:
    uses: ./.github/workflows/ci.yml  # use the callable tests job to run tests
  # bump:

  build:
    name: build
    needs: [ci]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        python-version: ${{ matrix.python-version }}
        enable-cache: true
    - name: Set up Python
      run: uv python install
    - name: Install the project
      run: uv sync

    - name: Build package
      run: uv build --out-dir dist-${{ matrix.python-version }}

    - name: Upload built package
      uses: actions/upload-artifact@v4
      with:
        name: dist-${{ matrix.python-version }}
        path: dist-${{ matrix.python-version }}/
        retention-days: 1
  cd:
    name: cd
    needs: [ci, build]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Download built package
      uses: actions/download-artifact@v4
      with:
        name: dist-3.10
        path: dist-3.10
    - name: Install uv
      uses: astral-sh/setup-uv@v5
    - name: Publish distribution ðŸ“¦ to Test PyPI
      if: env.PUBLISH_TO_TEST_PYPI == 'true'
      run: uv publish --publish-url https://test.pypi.org/legacy/ dist-3.10/* -t ${{ secrets.PYPI_TEST_API_TOKEN }}
    - name: Publish distribution ðŸ“¦ to PyP
      if: env.PUBLISH_TO_PYPI == 'true'
      run: uv publish dist-3.10/* -t ${{ secrets.PYPI_API_TOKEN }}
