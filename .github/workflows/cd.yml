name: CI/CD
on:
  # push:
  #   branches: [main]
  # pull_request:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: 'patch'

env:
  PUBLISH_TO_TEST_PYPI: true
  PUBLISH_TO_PYPI: false

jobs:
  ci:
    uses: ./.github/workflows/ci.yml  # use the callable tests job to run tests
  build:
    name: build
    needs: [ci]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        python-version: ${{ matrix.python-version }}
        enable-cache: true
    - name: Set up Python
      run: uv python install
    - name: Install the project
      run: uv sync

    - name: Build package
      run: uv build --out-dir dist-${{ matrix.python-version }}

    - name: Upload built package
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist-${{ matrix.python-version }}/
        retention-days: 1
  cd:
    name: cd
    needs: [ci, build]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Download built package
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist-${{ matrix.python-version }}

    - name: "check if TEST_PYPI_API_TOKEN exists"
      env:
        super_secret_test: ${{ secrets.TEST_PYPI_API_TOKEN }}
      if: ${{ env.super_secret_test == '' }}
      run: |
        echo "the secret \'TEST_PYPI_API_TOKEN\' has not been made"
        echo "Please go to \'settings \> secrets \> actions\' to create it"
    - name: Publish distribution ðŸ“¦ to Test PyPI
      continue-on-error: true
      if: ${{ env.super_secret_test != '' }} and ${{ env.PUBLISH_TO_TEST_PYPI == 'true' }}
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/

    - name: "check if PYPI_API_TOKEN exists"
      env:
        super_secret: ${{ secrets.PYPI_API_TOKEN }}
      if: ${{ env.super_secret == '' }}
      run: |
        echo "the secret \'PYPI_API_TOKEN\' has not been made"
        echo "Please go to \'settings \> secrets \> actions\' to create it"
        exit 1
    - name: Publish distribution ðŸ“¦ to PyPI
      if: ${{ env.super_secret != '' }} and ${{ env.PUBLISH_TO_PYPI == 'true' }} and startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
