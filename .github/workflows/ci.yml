name: CI
on:
  push:
    branches: [main]
  pull_request:
  workflow_call:

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }} 
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      
      # Cache pip dependencies
      - name: Cache pip dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('**/requirements.txt') }}-${{ matrix.python-version }}-${{ matrix.os }}
      
      # Install dependencies
      - run: pip install --upgrade pip
      - run: pip install '.[dev, docs]'
      
      # Run tests
      - name: Run Pytest
        run: echo "Running Pytest" && pytest --cov=./py_fatigue --cov-report=xml
      - name: Run Black
        run: echo "Running Black" && black py_fatigue
      - name: Run Flake8
        run: echo "Running Flake8" && flake8 py_fatigue
      - name: Run Pylint
        run: echo "Running Pylint" && pylint py_fatigue
      - name: Run Mypy
        run: echo "Running Mypy" && mypy py_fatigue

      # Upload coverage to Codecov
      - name: "check if CODECOV_TOKEN exists"
        env: 
          super_secret: ${{ secrets.CODECOV_TOKEN }}
        if: ${{ env.super_secret == '' }}
        run: |
          echo "the secret 'CODECOV_TOKEN' has not been made"
          echo "Please go to 'settings > secrets > actions' to create it"
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/reports/
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          files: ./coverage.xml
          flags: pytest
          name: codecov-umbrella
          path_to_write_report: ./coverage/codecov_report.txt
          verbose: true
